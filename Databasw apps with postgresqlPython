1 INTRO TO DATA:
   ------------

*what is data?
    Data is a collection of information.
    The name 'Data' is derived from Datum(SINGLE PIECE OF INFORMATION).
    Eg: person-> name,age,gender,DOB,Nationality,height( are data of the person).

*various forms of data?
  TEXT,NUMBERS,MEDIA,ETC.....

  Eralier data was written and stored,but nowadays stored in laptop as bytes.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2 INTRO TO DATABASE:
   ----------------

*what is a database?
    Database is a organized collection of data stored in database in the form of tables(means by rows & columns).
    It can be eaisly managed, accessed and updated.

*Main purpose of Database:
--------------------------
    To operate a large amount of information by  Storing ,Reterving  and managing them.

    Many Databases are available like:
      .Mysql
      .Oracle
      .Postgresql
      .MongoDB,...etc


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3 INTRO TO POSTGRESQL:
  --------------------



*Types of Databases:
  1.Hierarchical Databse
  2.NoSQL Database
  3.Object oriented Database
  4.Relational Database
  5.Network Databse

*Relational database & object oriented Database are deal with postgreqsl.


*About Relational Database:
 -------------------------
  *They are categorized by a set of tables.
  *SQL(structure query language)act as the application interface.
  *Easier to modify(Extending the Database & Joining the Databases).


*What is postgresql?
  .Object-oriented database + Relational Database
  .Similar to relational Database.
  .Object oriented Database ->Objects,classes & inheritance are supported.
  .Open source
  .Source code is available under postgresql License
  .Building of commerical apps.



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4. INSTALLING POSTGRESQL:
-------------------------

.type postgresql and download
.search psql(p sqlshell) will open .
        server[localhost]
        Database[postgres]
        port[5433]
        username[postgres]
        password for user postgres:demo123


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


5. CREATING A DATABASE:
   -------------------




* open the psql shell

* what are the Databases available inside this shell?
 ----------------------------------------------------

              >> \l ==>It will show which databases are available inside this shell.


* To create new Database:
  ------------------------
            >>create database databasename;


            Eg: >>create database demo;
                 CREATE Database


*To switch from one database to another database:
 -----------------------------------------------

         >>\c databasename;

          Eg: >>\c demo;
              you are now connected to database 'demo'as user 'postgres'.




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

6. DELETE DATABASE:
   ----------------




*How to delete a database:
 -------------------------

>> drop database databasename;


Eg:
 >>create database test;
   CREATE A DATABASE

>>drop database test;
DROP DATABASE




------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



 7. CREATING TABLE AND ADDING DATA:
   -------------------------------


>>create database databasename;
Eg: >>create database student;
      CREATE DATABASE


*To Create a table:
 ------------------
  >>create table tablename(field1 datatype,field2 datatype,..........);


Eg: create table student(name text,roll_no int,age int);
    CREATE TABLE


>>\d  ===>it will show the list of operations like(name\type\owner)here name=student,type=table,owner=postgres).




*Adding data to the fields:
 --------------------------


>>INSERT INTO TABLENAME(table fields,.....) VALUES(value1,value2,.....)

Eg:
>>INSERT INTO student(name,roll_no,age) VALUES("siva",920,25);
INSERT 0 1



>>INSERT INTO student(name,roll_no,age) VALUES("Krishna",2770,24);
INSERT 0 1




----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



8.RETRIEVING DATA FROM DATABASE  AND DELETING CONTENTS FROM DATABASE:
  -------------------------------------------------------------------





*RETRIEVING DATA FROM DATABASE:
 ---------------------------------

>> SELECT * FROM TABLENAME;


Eg:
  >>SELECT * FROM STUDENT;

o/p:
 name roll_no age
 siva  920     25
 krishna 2770  24




>>SELECT NAME FROM STUDENT;
 o/p:
name
----
siva
krishna




>>SELECT * FROM STUDENT WHERE age=24;
 o/p:
name roll_no age
----------------
krishna 2770 24






*Deleting contents from a table:
 ------------------------------

>> TRUNCATE TABLE TABLENAME;


Eg:
>>TRUNCATE TABLE STUDENT;
Truncate table


>>select * from student;

o/p:
name roll_no age
---------------










-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


9. SETTING UP VIRTUALENV:
   ---------------------

   step 1: visualstudiocode(type in chrome)
   step 2: open first link
   step 3: choose operating system(windows,linux,mac)
   step 4:download
   step 5: open vs code
   step 6: open you created folder in vs code and write sample code
   step 7: open command prompt(cmd) and navigate to the path(your created folder path).
   step 8:type in cmd ( pip install virtualenv)
   step 9:once virtualenv was installed, then create virtualenv like, type (virtualenv env).here env is my environment name.
           so, environment was created inside the directory in vs code.
   step 10: To active env :cd env
   step 11: cd scripts
   step 12: type:activate
   step 13: To run python code,go back to vs code like, cd.. and cd..
            Then run code: python filename.py

   step 14: suppose you want to deactive virtualenv ,just type: deactivate.






-----------------------------------------------------------------------------------------------------------------------------------------------------------


10. INSTALLING PSYCOPG2:
    --------------------

   *psycog2 is a package.This package helps to communicate with python & postgres Database.
    *To install:
      * (env) user/krishna/Desktop/visual_studio>pip install psycog2==2.8.6  (Iam in environment path ).

------------------------------------------------------------------------------------------------------------------------------------------------------------

11. CONNECTING TO THE POSTGRES DATABASE:
    ------------------------------------

   *To connect python with that postgres database,we have to import that psycopg2 package,which we was installed previously.
      Here conn is an object.
      tet.py:
      import psycopg2
      conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
      print("connected successfully")
     

   *To conform the connection:
      open commond prompt
         (env) C:\user\Desktop\visual_studio>python test.py


    o/p:connected successfully



-----------------------------------------------------------------------------------------------------------------------------------------------------------


12. CREATING TABLE USING PYTHON:
    ----------------------------
*(test.py):filename
      import psycopg2
      conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
      cursor=conn.cursor()
      #cursor.execute('''create table tablename(field1 datatype,field2 datatype,....);''')
      cursor.execute('''create table employee(Name TEXT,Age INT);''')
      print("Table created successfully")
      conn.commit()
      conn.close()

*run:open cmd
     (env) C:\user\Desktop\visual_studio>python test.py
      Table created successfully



*To check whether table is created or not:
   *open psql
   *\d


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


13. INSERTING THE DATA USING PYTHON:
    --------------------------------

*(test.py):filename
      import psycopg2
      def table():
         conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
         cursor=conn.cursor()
         cursor.execute('''create table employee(Name TEXT,Age INT);''')
         print("Table created successfully")
         conn.commit()
         conn.close()
      def data():
         conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
         cursor=conn.cursor()
         cursor.execute('''INSERT INTO employee(Name,Age) values("siva",23);''')
         print("Data added successfully")
         conn.commit()
         conn.close()

      data()


*run:open cmd
   (env) C:\user\Desktop\visual_studio>python test.py
      Data added successfully


*To check whether table is created or not:
   *open psql
   *\d


*postgres=# select * from employee

   Name | Age
   ----------
   siva | 23



----------------------------------------------------------------------------------------------------------------------------------------------------


14. EXTRACTING THE DATA FROM THE DATABASE:
   ---------------------------------------
   *fetchone() ->is used to get data from the database.

*(test.py):filename
      import psycopg2
      def table():
         conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
         cursor=conn.cursor()
         cursor.execute('''create table employee(Name TEXT,Age INT);''')
         print("Table created successfully")
         conn.commit()
         conn.close()
      def data():
         conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
         cursor=conn.cursor()
         cursor.execute('''INSERT INTO employee(Name,Age) values("siva",23);''')
         print("Data added successfully")
         conn.commit()
         conn.close()

      def extract():
         conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
         cursor=conn.cursor()
         cursor.execute('''SELECT * FROM EMPLOYEE''')
         print(cursor.fetchone())
         conn.commit()
         conn.close()
      extract()




*run:open cmd
   (env) C:\user\Desktop\visual_studio>python test.py
      ('siva' 23)  ->should be in tuple



Eg2:

*(test.py):filename
      import psycopg2
      def table():
         conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
         cursor=conn.cursor()
         cursor.execute('''create table employee(Name TEXT,Age INT);''')
         print("Table created successfully")
         conn.commit()
         conn.close()
      def data():
         conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
         cursor=conn.cursor()
         cursor.execute('''INSERT INTO employee(Name,Age) values("siva",23);''')
         print("Data added successfully")
         conn.commit()
         conn.close()

      def extract():
         conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
         cursor=conn.cursor()
         cursor.execute('''SELECT * FROM EMPLOYEE''')
         show=cursor.fetchone()
         print(show[0])
         conn.commit()
         conn.close()
      extract()





*run:open cmd
   (env) C:\user\Desktop\visual_studio>python test.py
   siva



-----------------------------------------------------------------------------------------------------------------------------------------------------------------


15. ADDING THE INPUT FROM USER:
    ----------------------------


*(test.py):filename
      import psycopg2
      def table():
         conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
         cursor=conn.cursor()
         cursor.execute('''create table employee(Name TEXT,Age INT);''')
         print("Table created successfully")
         conn.commit()
         conn.close()
      def data():
         conn=psycopg2.connect(dbname="postgres",user="postgres",password="demo123",host="localhost",port="5433")
         cursor=conn.cursor()
         name=input("Enter name:")
         age=input("Enter age:")
         query='''INSERT INTO employee(Name,Age) values(%s,%s);'''
         cursor.execute(query,(name,age))
         print("Data added successfully")
         conn.commit()
         conn.close()




*run:open cmd
   (env) C:\user\Desktop\visual_studio>python test.py
      Enter name:siva
      Enter age: 23
      Data added successfully



          

   



